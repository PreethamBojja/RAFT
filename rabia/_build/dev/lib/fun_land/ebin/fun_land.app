{application,fun_land,
             [{optional_applications,[]},
              {applications,[kernel,stdlib,elixir,logger]},
              {description,"FunLand adds Behaviours to define Algebraic Data Types ('Container' data types) to Elixir, such as Functors, Monoids and Monads.\n"},
              {modules,['Elixir.FunLand','Elixir.FunLand.Appliable',
                        'Elixir.FunLand.Applicative','Elixir.FunLand.Builtin',
                        'Elixir.FunLand.Builtin.Atom',
                        'Elixir.FunLand.Builtin.BitString',
                        'Elixir.FunLand.Builtin.Float',
                        'Elixir.FunLand.Builtin.Function',
                        'Elixir.FunLand.Builtin.Integer',
                        'Elixir.FunLand.Builtin.List',
                        'Elixir.FunLand.Builtin.Map',
                        'Elixir.FunLand.Builtin.MapSet',
                        'Elixir.FunLand.Builtin.PID',
                        'Elixir.FunLand.Builtin.Port',
                        'Elixir.FunLand.Builtin.Reference',
                        'Elixir.FunLand.Builtin.SuccessTuple',
                        'Elixir.FunLand.Builtin.Tuple',
                        'Elixir.FunLand.Chainable',
                        'Elixir.FunLand.Combinable',
                        'Elixir.FunLand.CombinableMonad',
                        'Elixir.FunLand.Helper',
                        'Elixir.FunLand.Helper.GuardMacros',
                        'Elixir.FunLand.Mappable','Elixir.FunLand.Monad',
                        'Elixir.FunLand.Reducable',
                        'Elixir.FunLand.Semicombinable',
                        'Elixir.FunLand.Traversable']},
              {registered,[]},
              {vsn,"0.9.3"}]}.
