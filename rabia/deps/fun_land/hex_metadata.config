{<<"app">>,<<"fun_land">>}.
{<<"build_tools">>,[<<"mix">>]}.
{<<"description">>,
 <<"FunLand adds Behaviours to define Algebraic Data Types ('Container' data types) to Elixir, such as Functors, Monoids and Monads.">>}.
{<<"elixir">>,<<"~> 1.3">>}.
{<<"files">>,
 [<<"lib">>,<<"lib/fun_land">>,<<"lib/fun_land/mappable.ex">>,
  <<"lib/fun_land/builtin">>,<<"lib/fun_land/builtin/port.ex">>,
  <<"lib/fun_land/builtin/atom.ex">>,<<"lib/fun_land/builtin/float.ex">>,
  <<"lib/fun_land/builtin/function.ex">>,<<"lib/fun_land/builtin/tuple.ex">>,
  <<"lib/fun_land/builtin/reference.ex">>,<<"lib/fun_land/builtin/pid.ex">>,
  <<"lib/fun_land/builtin/map_set.ex">>,
  <<"lib/fun_land/builtin/success_tuple.ex">>,
  <<"lib/fun_land/builtin/integer.ex">>,<<"lib/fun_land/builtin/map.ex">>,
  <<"lib/fun_land/builtin/bit_string.ex">>,<<"lib/fun_land/builtin/list.ex">>,
  <<"lib/fun_land/traversable.ex">>,<<"lib/fun_land/builtin.ex">>,
  <<"lib/fun_land/reducable.ex">>,<<"lib/fun_land/combinable.ex">>,
  <<"lib/fun_land/helper">>,<<"lib/fun_land/helper/guard_macros.ex">>,
  <<"lib/fun_land/combinable_monad.ex">>,<<"lib/fun_land/appliable.ex">>,
  <<"lib/fun_land/helper.ex">>,<<"lib/fun_land/monad.ex">>,
  <<"lib/fun_land/semicombinable.ex">>,<<"lib/fun_land/applicative.ex">>,
  <<"lib/fun_land/chainable.ex">>,<<"lib/fun_land.ex">>,<<"mix.exs">>,
  <<"README.md">>,<<"LICENSE">>]}.
{<<"licenses">>,[<<"MIT">>]}.
{<<"links">>,[{<<"GitHub">>,<<"https://github.com/qqwy/elixir_fun_land">>}]}.
{<<"name">>,<<"fun_land">>}.
{<<"requirements">>,
 [[{<<"app">>,<<"currying">>},
   {<<"name">>,<<"currying">>},
   {<<"optional">>,false},
   {<<"repository">>,<<"hexpm">>},
   {<<"requirement">>,<<"~> 1.0">>}],
  [{<<"app">>,<<"numbers">>},
   {<<"name">>,<<"numbers">>},
   {<<"optional">>,false},
   {<<"repository">>,<<"hexpm">>},
   {<<"requirement">>,<<"~> 5.0">>}]]}.
{<<"version">>,<<"0.9.3">>}.
